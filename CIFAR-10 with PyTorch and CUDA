{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/nukimayasari/cifar-10-with-pytorch-and-cuda?scriptVersionId=217805476\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"57f2815b","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2025-01-15T16:34:03.676775Z","iopub.status.busy":"2025-01-15T16:34:03.676382Z","iopub.status.idle":"2025-01-15T16:34:04.445284Z","shell.execute_reply":"2025-01-15T16:34:04.444396Z"},"papermill":{"duration":0.77815,"end_time":"2025-01-15T16:34:04.447036","exception":false,"start_time":"2025-01-15T16:34:03.668886","status":"completed"},"tags":[]},"outputs":[],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"markdown","id":"36326ec3","metadata":{"papermill":{"duration":0.00544,"end_time":"2025-01-15T16:34:04.458645","exception":false,"start_time":"2025-01-15T16:34:04.453205","status":"completed"},"tags":[]},"source":["# **Accelerating CIFAR-10 Image Classification with PyTorch and CUDA**\n","\n","## Introduction\n","In this project, we explore the application of **CUDA (Compute Unified Device Architecture)** to accelerate training a deep learning model for image classification tasks. CUDA is a parallel computing platform and application programming interface (API) model created by NVIDIA. It allows developers to harness the power of NVIDIA GPUs to perform general-purpose computations, enabling faster execution of complex tasks compared to CPU-only computations. This makes CUDA particularly valuable in deep learning, where training large models on large datasets can be computationally expensive and time-consuming.\n","\n","We use the **CIFAR-10 dataset**, a popular benchmark dataset in computer vision containing 60,000 color images across 10 classes. Each image is small in size (32x32 pixels), but collectively, the dataset presents a challenging task for classification due to its complexity and variety. This project focuses on leveraging CUDA to efficiently train and optimize a convolutional neural network (CNN) for the CIFAR-10 dataset, aiming to achieve high accuracy while understanding the advantages of GPU acceleration. This notebook was developed with the assistance of ChatGPT."]},{"cell_type":"markdown","id":"18f4cd39","metadata":{"papermill":{"duration":0.005284,"end_time":"2025-01-15T16:34:04.469683","exception":false,"start_time":"2025-01-15T16:34:04.464399","status":"completed"},"tags":[]},"source":["### GPU Setting\n","After opening the Kaggle notebook, in the **Settings** tab on the right (under Accelerato) we can select **GPU**. I use GPU P100."]},{"cell_type":"markdown","id":"781dc312","metadata":{"papermill":{"duration":0.005262,"end_time":"2025-01-15T16:34:04.480522","exception":false,"start_time":"2025-01-15T16:34:04.47526","status":"completed"},"tags":[]},"source":["## Import Libraries\n","\n","These libraries will help us use PyTorch and load image datasets."]},{"cell_type":"code","execution_count":2,"id":"2aeb2a61","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:04.49305Z","iopub.status.busy":"2025-01-15T16:34:04.492586Z","iopub.status.idle":"2025-01-15T16:34:09.888867Z","shell.execute_reply":"2025-01-15T16:34:09.887984Z"},"papermill":{"duration":5.404604,"end_time":"2025-01-15T16:34:09.890785","exception":false,"start_time":"2025-01-15T16:34:04.486181","status":"completed"},"tags":[]},"outputs":[],"source":["import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import torchvision\n","import torchvision.transforms as transforms"]},{"cell_type":"markdown","id":"e064bc69","metadata":{"papermill":{"duration":0.00529,"end_time":"2025-01-15T16:34:09.901982","exception":false,"start_time":"2025-01-15T16:34:09.896692","status":"completed"},"tags":[]},"source":["## Load a Dataset\n","We'll use the **CIFAR-10** dataset, a small image classification dataset."]},{"cell_type":"code","execution_count":3,"id":"c8e5b265","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:09.915718Z","iopub.status.busy":"2025-01-15T16:34:09.915213Z","iopub.status.idle":"2025-01-15T16:34:15.946226Z","shell.execute_reply":"2025-01-15T16:34:15.945426Z"},"papermill":{"duration":6.039665,"end_time":"2025-01-15T16:34:15.947934","exception":false,"start_time":"2025-01-15T16:34:09.908269","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./data/cifar-10-python.tar.gz\n"]},{"name":"stderr","output_type":"stream","text":["100%|██████████| 170498071/170498071 [00:02<00:00, 77391532.02it/s]\n"]},{"name":"stdout","output_type":"stream","text":["Extracting ./data/cifar-10-python.tar.gz to ./data\n","Files already downloaded and verified\n"]}],"source":["# Define transformations (normalize and convert images to tensors)\n","transform = transforms.Compose([\n","    transforms.ToTensor(),\n","    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))  # Normalize to [-1, 1]\n","])\n","\n","# Load CIFAR-10 dataset\n","train_dataset = torchvision.datasets.CIFAR10(root='./data', train=True, download=True, transform=transform)\n","train_loader = torch.utils.data.DataLoader(train_dataset, batch_size=32, shuffle=True)\n","\n","test_dataset = torchvision.datasets.CIFAR10(root='./data', train=False, download=True, transform=transform)\n","test_loader = torch.utils.data.DataLoader(test_dataset, batch_size=32, shuffle=False)\n"]},{"cell_type":"markdown","id":"8917ce8d","metadata":{"papermill":{"duration":0.007153,"end_time":"2025-01-15T16:34:15.962613","exception":false,"start_time":"2025-01-15T16:34:15.95546","status":"completed"},"tags":[]},"source":["## Peek at the Head of the Dataset\n","\n","To peek at the head of our dataset, we can use the following approach depending on the type of data loader or dataset we're using. \n","\n","\n","### For a PyTorch DataLoader\n","If we're using a PyTorch DataLoader, we can retrieve a batch of data and inspect the first few samples like this:"]},{"cell_type":"code","execution_count":4,"id":"a9d40228","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:15.977865Z","iopub.status.busy":"2025-01-15T16:34:15.977535Z","iopub.status.idle":"2025-01-15T16:34:16.080963Z","shell.execute_reply":"2025-01-15T16:34:16.079906Z"},"papermill":{"duration":0.112819,"end_time":"2025-01-15T16:34:16.082393","exception":false,"start_time":"2025-01-15T16:34:15.969574","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Labels: tensor([6, 9, 5, 4, 2])\n","Images shape: torch.Size([5, 3, 32, 32])\n"]}],"source":["# Peek into the dataset from the DataLoader\n","dataiter = iter(train_loader)  # Get an iterator for the DataLoader\n","images, labels = next(dataiter)  # Get the first batch\n","\n","# Display the first few images and labels\n","print(\"Labels:\", labels[:5])  # Print first 5 labels\n","print(\"Images shape:\", images[:5].shape)  # Print the shape of the first 5 images"]},{"cell_type":"markdown","id":"7695814d","metadata":{"papermill":{"duration":0.006803,"end_time":"2025-01-15T16:34:16.096229","exception":false,"start_time":"2025-01-15T16:34:16.089426","status":"completed"},"tags":[]},"source":["### For a Custom Dataset (e.g., `torchvision.datasets`)\n","If we're using a dataset like CIFAR10 or ImageFolder, we can directly index it:"]},{"cell_type":"code","execution_count":5,"id":"075da071","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:16.110997Z","iopub.status.busy":"2025-01-15T16:34:16.110616Z","iopub.status.idle":"2025-01-15T16:34:16.120539Z","shell.execute_reply":"2025-01-15T16:34:16.119468Z"},"papermill":{"duration":0.019196,"end_time":"2025-01-15T16:34:16.122072","exception":false,"start_time":"2025-01-15T16:34:16.102876","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Sample 0: Label=6, Image shape=torch.Size([3, 32, 32])\n","Sample 1: Label=9, Image shape=torch.Size([3, 32, 32])\n","Sample 2: Label=9, Image shape=torch.Size([3, 32, 32])\n","Sample 3: Label=4, Image shape=torch.Size([3, 32, 32])\n","Sample 4: Label=1, Image shape=torch.Size([3, 32, 32])\n"]}],"source":["# Peek into the dataset directly\n","for i in range(5):  # Display the first 5 samples\n","    image, label = train_dataset[i]\n","    print(f\"Sample {i}: Label={label}, Image shape={image.shape}\")\n","    "]},{"cell_type":"markdown","id":"082681c7","metadata":{"papermill":{"duration":0.006838,"end_time":"2025-01-15T16:34:16.136469","exception":false,"start_time":"2025-01-15T16:34:16.129631","status":"completed"},"tags":[]},"source":["### Visualizing the Dataset\n","To visually inspect the images:"]},{"cell_type":"code","execution_count":6,"id":"f7da7ab8","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:16.15177Z","iopub.status.busy":"2025-01-15T16:34:16.151407Z","iopub.status.idle":"2025-01-15T16:34:16.435837Z","shell.execute_reply":"2025-01-15T16:34:16.43209Z"},"papermill":{"duration":0.296081,"end_time":"2025-01-15T16:34:16.439686","exception":false,"start_time":"2025-01-15T16:34:16.143605","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["Labels: tensor([6, 9, 5, 4, 2])\n"]}],"source":["import matplotlib.pyplot as plt\n","\n","# Helper function to unnormalize and display images\n","def imshow(img):\n","    img = img / 2 + 0.5  # Unnormalize\n","    npimg = img.numpy()\n","    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n","    plt.show()\n","\n","# Display the first few images\n","imshow(torchvision.utils.make_grid(images[:5]))\n","print(\"Labels:\", labels[:5])\n"]},{"cell_type":"markdown","id":"5d66d3f5","metadata":{"papermill":{"duration":0.008859,"end_time":"2025-01-15T16:34:16.457641","exception":false,"start_time":"2025-01-15T16:34:16.448782","status":"completed"},"tags":[]},"source":["## Define a Neural Network\n","We'll create a simple Convolutional Neural Network (CNN) for image classification."]},{"cell_type":"code","execution_count":7,"id":"4d51a48f","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:16.477539Z","iopub.status.busy":"2025-01-15T16:34:16.477137Z","iopub.status.idle":"2025-01-15T16:34:16.482935Z","shell.execute_reply":"2025-01-15T16:34:16.481945Z"},"papermill":{"duration":0.017604,"end_time":"2025-01-15T16:34:16.484432","exception":false,"start_time":"2025-01-15T16:34:16.466828","status":"completed"},"tags":[]},"outputs":[],"source":["class SimpleCNN(nn.Module):\n","    def __init__(self):\n","        super(SimpleCNN, self).__init__()\n","        self.conv1 = nn.Conv2d(3, 16, kernel_size=3, padding=1)  # 3 channels (RGB) to 16 filters\n","        self.pool = nn.MaxPool2d(2, 2)  # Max pooling\n","        self.fc1 = nn.Linear(16 * 16 * 16, 10)  # Fully connected layer (10 classes)\n","\n","    def forward(self, x):\n","        x = self.pool(torch.relu(self.conv1(x)))\n","        x = x.view(-1, 16 * 16 * 16)  # Flatten\n","        x = self.fc1(x)\n","        return x"]},{"cell_type":"markdown","id":"d51bf46e","metadata":{"papermill":{"duration":0.009004,"end_time":"2025-01-15T16:34:16.502517","exception":false,"start_time":"2025-01-15T16:34:16.493513","status":"completed"},"tags":[]},"source":["## Move the Model to GPU (CUDA)\n","**CUDA** comes into play here! We move the model and data to the GPU for **acceleration**."]},{"cell_type":"code","execution_count":8,"id":"9df590cc","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:16.522517Z","iopub.status.busy":"2025-01-15T16:34:16.522074Z","iopub.status.idle":"2025-01-15T16:34:16.771801Z","shell.execute_reply":"2025-01-15T16:34:16.770894Z"},"papermill":{"duration":0.261727,"end_time":"2025-01-15T16:34:16.773617","exception":false,"start_time":"2025-01-15T16:34:16.51189","status":"completed"},"tags":[]},"outputs":[],"source":["device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","model = SimpleCNN().to(device)"]},{"cell_type":"markdown","id":"31defa98","metadata":{"papermill":{"duration":0.008792,"end_time":"2025-01-15T16:34:16.791659","exception":false,"start_time":"2025-01-15T16:34:16.782867","status":"completed"},"tags":[]},"source":["## Train the Model\n","We'll train the model and observe how CUDA accelerates it."]},{"cell_type":"code","execution_count":9,"id":"cf3d8d5e","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:16.811004Z","iopub.status.busy":"2025-01-15T16:34:16.810683Z","iopub.status.idle":"2025-01-15T16:34:51.210319Z","shell.execute_reply":"2025-01-15T16:34:51.209286Z"},"papermill":{"duration":34.42028,"end_time":"2025-01-15T16:34:51.220987","exception":false,"start_time":"2025-01-15T16:34:16.800707","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1, Loss: 1.716635393852312\n","Epoch 2, Loss: 1.3877741662035825\n"]}],"source":["criterion = nn.CrossEntropyLoss()  # Loss function\n","optimizer = optim.SGD(model.parameters(), lr=0.001, momentum=0.9)  # Optimizer\n","\n","# Training loop\n","for epoch in range(2):  # Let's keep it short for now\n","    running_loss = 0.0\n","    for inputs, labels in train_loader:\n","        inputs, labels = inputs.to(device), labels.to(device)  # Move data to GPU\n","        \n","        optimizer.zero_grad()  # Zero the gradients\n","        outputs = model(inputs)  # Forward pass\n","        loss = criterion(outputs, labels)  # Calculate loss\n","        loss.backward()  # Backpropagation\n","        optimizer.step()  # Update weights\n","        \n","        running_loss += loss.item()\n","\n","    print(f\"Epoch {epoch + 1}, Loss: {running_loss / len(train_loader)}\")\n"]},{"cell_type":"markdown","id":"94f1efb5","metadata":{"papermill":{"duration":0.008925,"end_time":"2025-01-15T16:34:51.239037","exception":false,"start_time":"2025-01-15T16:34:51.230112","status":"completed"},"tags":[]},"source":["## Evaluate the Model\n","Evaluate the model's performance using the test dataset."]},{"cell_type":"code","execution_count":10,"id":"1fbc2caa","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:51.259261Z","iopub.status.busy":"2025-01-15T16:34:51.258921Z","iopub.status.idle":"2025-01-15T16:34:54.285693Z","shell.execute_reply":"2025-01-15T16:34:54.284648Z"},"papermill":{"duration":3.038537,"end_time":"2025-01-15T16:34:54.287153","exception":false,"start_time":"2025-01-15T16:34:51.248616","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Accuracy: 53.13%\n"]}],"source":["correct = 0\n","total = 0\n","model.eval()  # Switch to evaluation mode\n","\n","with torch.no_grad():\n","    for inputs, labels in test_loader:\n","        inputs, labels = inputs.to(device), labels.to(device)  # Move data to GPU\n","        outputs = model(inputs)\n","        _, predicted = torch.max(outputs, 1)\n","        total += labels.size(0)\n","        correct += (predicted == labels).sum().item()\n","\n","print(f\"Accuracy: {100 * correct / total:.2f}%\")\n"]},{"cell_type":"markdown","id":"3f5f1d04","metadata":{"papermill":{"duration":0.009045,"end_time":"2025-01-15T16:34:54.305711","exception":false,"start_time":"2025-01-15T16:34:54.296666","status":"completed"},"tags":[]},"source":["## Result\n","Achieving **53.56% accuracy** on the **CIFAR-10** dataset is a solid baseline, especially for a simple model like the one we've implemented. Let’s make some improvements to increase the accuracy."]},{"cell_type":"markdown","id":"278f7c26","metadata":{"papermill":{"duration":0.009039,"end_time":"2025-01-15T16:34:54.323952","exception":false,"start_time":"2025-01-15T16:34:54.314913","status":"completed"},"tags":[]},"source":["## **Model Improvements**\n","\n","## Add More Layers to the Model\n","A deeper model can learn more complex features from the data. Let’s upgrade our `SimpleCNN`.\n","\n","**What’s new?**\n","* More convolutional layers to extract richer features.\n","* L2 regularization (weight decay) and dropout for better generalization:"]},{"cell_type":"code","execution_count":11,"id":"bfa3ba53","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:54.34369Z","iopub.status.busy":"2025-01-15T16:34:54.343269Z","iopub.status.idle":"2025-01-15T16:34:54.359783Z","shell.execute_reply":"2025-01-15T16:34:54.35867Z"},"papermill":{"duration":0.028368,"end_time":"2025-01-15T16:34:54.361512","exception":false,"start_time":"2025-01-15T16:34:54.333144","status":"completed"},"tags":[]},"outputs":[],"source":["class ImprovedCNNWithRegularization(nn.Module):\n","    def __init__(self):\n","        super(ImprovedCNNWithRegularization, self).__init__()\n","        self.conv1 = nn.Conv2d(3, 32, kernel_size=3, padding=1)\n","        self.conv2 = nn.Conv2d(32, 64, kernel_size=3, padding=1)\n","        self.conv3 = nn.Conv2d(64, 128, kernel_size=3, padding=1)\n","        self.pool = nn.MaxPool2d(2, 2)\n","        self.fc1 = nn.Linear(128 * 4 * 4, 256)\n","        self.fc2 = nn.Linear(256, 10)\n","        self.dropout = nn.Dropout(0.5)  # 50% Dropout\n","\n","    def forward(self, x):\n","        x = self.pool(torch.relu(self.conv1(x)))\n","        x = self.pool(torch.relu(self.conv2(x)))\n","        x = self.pool(torch.relu(self.conv3(x)))\n","        x = x.view(-1, 128 * 4 * 4)  # Flatten\n","        x = self.dropout(torch.relu(self.fc1(x)))\n","        x = self.fc2(x)\n","        return x\n","\n","model = ImprovedCNNWithRegularization().to(device)\n","\n","# Define optimizer with L2 regularization\n","import torch.optim as optim\n","\n","criterion = nn.CrossEntropyLoss()\n","optimizer = optim.Adam(model.parameters(), lr=0.001, weight_decay=1e-4)  # L2 regularization\n"]},{"cell_type":"markdown","id":"0721bd7b","metadata":{"papermill":{"duration":0.008959,"end_time":"2025-01-15T16:34:54.380168","exception":false,"start_time":"2025-01-15T16:34:54.371209","status":"completed"},"tags":[]},"source":["## Use a Better Optimizer\n","Switch to **Adam**, which often converges faster and better than SGD."]},{"cell_type":"code","execution_count":12,"id":"409c11d7","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:54.400035Z","iopub.status.busy":"2025-01-15T16:34:54.399679Z","iopub.status.idle":"2025-01-15T16:34:54.404068Z","shell.execute_reply":"2025-01-15T16:34:54.40314Z"},"papermill":{"duration":0.01619,"end_time":"2025-01-15T16:34:54.405571","exception":false,"start_time":"2025-01-15T16:34:54.389381","status":"completed"},"tags":[]},"outputs":[],"source":["optimizer1 = torch.optim.Adam(model.parameters(), lr=0.001)"]},{"cell_type":"markdown","id":"a9f1f525","metadata":{"papermill":{"duration":0.00922,"end_time":"2025-01-15T16:34:54.424033","exception":false,"start_time":"2025-01-15T16:34:54.414813","status":"completed"},"tags":[]},"source":["## Increase Training Epochs\n","Two epochs are too few for a model to learn effectively. Let’s increase it to 10 or more."]},{"cell_type":"code","execution_count":13,"id":"a2fb794e","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:34:54.444333Z","iopub.status.busy":"2025-01-15T16:34:54.443945Z","iopub.status.idle":"2025-01-15T16:38:02.714091Z","shell.execute_reply":"2025-01-15T16:38:02.71306Z"},"papermill":{"duration":188.291693,"end_time":"2025-01-15T16:38:02.725294","exception":false,"start_time":"2025-01-15T16:34:54.433601","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1, Loss: 1.4981720780075474\n","Epoch 2, Loss: 1.087778213576331\n","Epoch 3, Loss: 0.911718533234343\n","Epoch 4, Loss: 0.8031098892386724\n","Epoch 5, Loss: 0.7284674921137968\n","Epoch 6, Loss: 0.6716727358995153\n","Epoch 7, Loss: 0.6180473164305501\n","Epoch 8, Loss: 0.5717148392324789\n","Epoch 9, Loss: 0.5365082094361213\n","Epoch 10, Loss: 0.5018673895102087\n"]}],"source":["for epoch in range(10):  # Train for 10 epochs\n","    running_loss = 0.0\n","    for inputs, labels in train_loader:\n","        inputs, labels = inputs.to(device), labels.to(device)\n","        \n","        optimizer1.zero_grad()\n","        outputs = model(inputs)\n","        loss = criterion(outputs, labels)\n","        loss.backward()\n","        optimizer.step()\n","        \n","        running_loss += loss.item()\n","\n","    print(f\"Epoch {epoch + 1}, Loss: {running_loss / len(train_loader)}\")\n"]},{"cell_type":"markdown","id":"027a536b","metadata":{"papermill":{"duration":0.009428,"end_time":"2025-01-15T16:38:02.744488","exception":false,"start_time":"2025-01-15T16:38:02.73506","status":"completed"},"tags":[]},"source":["## Data Augmentation\n","Augmenting the data can help the model generalize better by introducing variations."]},{"cell_type":"code","execution_count":14,"id":"1057815b","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:38:02.765056Z","iopub.status.busy":"2025-01-15T16:38:02.764736Z","iopub.status.idle":"2025-01-15T16:38:02.769279Z","shell.execute_reply":"2025-01-15T16:38:02.768457Z"},"papermill":{"duration":0.016712,"end_time":"2025-01-15T16:38:02.770803","exception":false,"start_time":"2025-01-15T16:38:02.754091","status":"completed"},"tags":[]},"outputs":[],"source":["transform = transforms.Compose([\n","    transforms.RandomHorizontalFlip(),  # Flip images horizontally\n","    transforms.RandomCrop(32, padding=4),  # Random cropping with padding\n","    transforms.ToTensor(),\n","    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n","])\n"]},{"cell_type":"markdown","id":"c3a024a8","metadata":{"papermill":{"duration":0.009342,"end_time":"2025-01-15T16:38:02.789986","exception":false,"start_time":"2025-01-15T16:38:02.780644","status":"completed"},"tags":[]},"source":["## Monitor Learning with Validation Accuracy\n","Track validation accuracy during training to prevent overfitting."]},{"cell_type":"code","execution_count":15,"id":"42bdb09f","metadata":{"execution":{"iopub.execute_input":"2025-01-15T16:38:02.810271Z","iopub.status.busy":"2025-01-15T16:38:02.809955Z","iopub.status.idle":"2025-01-15T16:38:05.781869Z","shell.execute_reply":"2025-01-15T16:38:05.780673Z"},"papermill":{"duration":2.984107,"end_time":"2025-01-15T16:38:05.783678","exception":false,"start_time":"2025-01-15T16:38:02.799571","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Validation Accuracy: 76.69%\n"]}],"source":["# Validation loop\n","model.eval()\n","correct = 0\n","total = 0\n","with torch.no_grad():\n","    for inputs, labels in test_loader:\n","        inputs, labels = inputs.to(device), labels.to(device)\n","        outputs = model(inputs)\n","        _, predicted = torch.max(outputs, 1)\n","        total += labels.size(0)\n","        correct += (predicted == labels).sum().item()\n","\n","print(f\"Validation Accuracy: {100 * correct / total:.2f}%\")\n"]},{"cell_type":"markdown","id":"b6960255","metadata":{"papermill":{"duration":0.009751,"end_time":"2025-01-15T16:38:05.803144","exception":false,"start_time":"2025-01-15T16:38:05.793393","status":"completed"},"tags":[]},"source":["## Result\n","A validation accuracy of **76.89%%** is a significant improvement from the baseline"]},{"cell_type":"markdown","id":"be45d2dc","metadata":{"papermill":{"duration":0.009678,"end_time":"2025-01-15T16:38:05.822635","exception":false,"start_time":"2025-01-15T16:38:05.812957","status":"completed"},"tags":[]},"source":["## Key Takeaways\n","#### **What is CUDA?**\n","CUDA is a parallel computing framework developed by NVIDIA, enabling developers to utilize GPU resources for computationally intensive tasks.\n","It accelerates deep learning by processing operations in parallel across thousands of GPU cores, reducing training times significantly.\n","\n","#### **Why Use CUDA?**\n","Training deep learning models, especially on large datasets, is computationally demanding.\n","GPUs excel in parallel processing, offering significant speedups over CPUs.\n","CUDA integrates seamlessly with frameworks like PyTorch, providing an accessible API for GPU acceleration.\n","\n","#### **About the Dataset:**\n","The CIFAR-10 dataset comprises 60,000 32x32 color images across 10 classes, including airplanes, automobiles, birds, and cats.\n","It is divided into 50,000 training and 10,000 test images.\n","CIFAR-10 is widely used in machine learning research due to its small image size and challenging classification task.\n","\n","#### **Why Combine CIFAR-10 and CUDA?**\n","Training on CIFAR-10 can be computationally intensive for complex models.\n","Leveraging CUDA for acceleration facilitates experimentation with deeper architectures and faster iterations.\n","This combination provides a hands-on opportunity to explore the benefits of GPU acceleration in real-world deep learning scenarios."]}],"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[],"dockerImageVersionId":30823,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"},"papermill":{"default_parameters":{},"duration":246.482738,"end_time":"2025-01-15T16:38:07.557295","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-01-15T16:34:01.074557","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}